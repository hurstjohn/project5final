import java.util.ArrayList;


/**
 * <h1>Truck</h1> Represents a Truck
 */
public class Truck extends Vehicle {

    private final double GAS_RATE = 1.66;

    /**
     * Default Constructor
     */

    public Truck () {

        super();

    }





    /**
     * Constructor
     *
     * @param licensePlate license plate of vehicle
     * @param maxWeight    maximum weight that the vehicle can hold
     */

    public Truck (String licensePlate, double maxWeight) {


        super(licensePlate,maxWeight);

    }


    /*
     * =============================================================================
     * | Methods from Profitable Interface
     * =============================================================================
     */
    /**
     * Returns the profits generated by the packages currently in the Vehicle.
     * <p>
     * &sum;p<sub>price</sub> - (range<sub>max</sub> &times; 1.66)
     * </p>
     */
    @Override
    public double getProfit() {


        int maxRange = 0;
        try {
            maxRange = Math.abs(this.getZipDest() -
                    this.getPackages().get(this.getPackages().size() - 1).getDestination().getZipCode());

        } catch (IndexOutOfBoundsException e) {}
        double revenue = 0;

        for (int i = 0; i < this.getPackages().size(); i++) {

            revenue += this.getPackages().get(i).getPrice();

        }

        return revenue - (double) maxRange * GAS_RATE;


    }

    /**
     * Generates a String of the truck report. Truck report includes:
     * <ul>
     * <li>License Plate No.</li>
     * <li>Destination</li>
     * <li>Current Weight/Maximum Weight</li>
     * <li>Net Profit</li>
     * <li>Shipping labels of all packages in truck</li>
     * </ul>
     *
     * @return Truck Report
     */
    @Override
    public String report() {

        String report = "";


        report += "==========Truck Report==========\n";
        report += "License Plate No.: " + this.getLicensePlate() + "\n";
        report += "Weight Load: " + this.getCurrentWeight() + "/" + this.getMaxWeight() + "\n";
        report += "Net Profit: $" + String.format("%.2f", this.getProfit()) + "\n";
        //report += "==============================\n";
        report += "=====Shipping Labels=====\n";


        for (int i = 0; i < this.getPackages().size(); i++) {

            report += "====================\n";
            report += "TO: " + this.getPackages().get(i).getDestination().getName() + "\n";
            report += this.getPackages().get(i).getDestination().getAddress() + "\n";
            report += this.getPackages().get(i).getDestination().getCity() + ", "
                    + this.getPackages().get(i).getDestination().getState() + ", "
                    + this.getPackages().get(i).getDestination().getZipCode() + "\n";
            report += "Weight:         " + this.getPackages().get(i).getWeight() + "\n";
            report += "Price:        $" + this.getPackages().get(i).getPrice() + "\n";
            report += "Product:" + this.getPackages().get(i).getProduct() + "\n";
            report += "====================\n";


        }
        return report;
    }



}
